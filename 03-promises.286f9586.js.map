{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,aAAcC,SAASC,cAAc,iCACrCC,UAAWF,SAASC,cAAc,kBAClCE,SAAUH,SAASC,cAAc,iBACjCG,WAAYJ,SAASC,cAAc,oBA0BrC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,MAhCPT,EAAKC,aAAagB,iBAAiB,SAAS,SAAAC,GAC1CA,EAAMC,iBAOR,SAAyBC,EAAiBC,EAAcC,GACtD,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAiBG,GAAK,EAC9B,IAANA,IACFF,GAAgBC,GAElBf,EAAcgB,EAAI,EAAGF,GAClBG,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MACjBX,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,UAE9DoB,OAAM,SAAAJ,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MAClBX,EAAA4B,OAAOI,QAAQ,sBAAqCF,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,UAbhEsB,CAHa/B,EAAKM,WAAW0B,MACbC,SAASjC,EAAKI,UAAU4B,OAC7BC,SAASjC,EAAKK,SAAS2B,W","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  createButton: document.querySelector('.form > button[type=\"submit\"]'),\n  formDelay: document.querySelector('[name=\"delay\"]'),\n  formStep: document.querySelector('[name=\"step\"]'),\n  formAmount: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.createButton.addEventListener('click', event => {\n  event.preventDefault();\n  let amount = refs.formAmount.value;\n  let userDelay = parseInt(refs.formDelay.value);\n  let step = parseInt(refs.formStep.value);\n  promisGenerator(amount, userDelay, step);\n});\n\nfunction promisGenerator(amountOfPromise, firstDelauMs, delauStepMs) {\n  for (let i = 0; i < amountOfPromise; i += 1) {\n    if (i !== 0) {\n      firstDelauMs += delauStepMs;\n    }\n    createPromise(i + 1, firstDelauMs)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction changeBranche() {}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","createButton","document","querySelector","formDelay","formStep","formAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","amountOfPromise","firstDelauMs","delauStepMs","i","then","param","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$promisGenerator","value","parseInt"],"version":3,"file":"03-promises.286f9586.js.map"}